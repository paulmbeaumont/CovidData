ggplot(mapping = aes(
x = date,
y = pct,
group = location,
color = location
)) + geom_line()
usa <- USEU_pct %>%
filter(location == "United States") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
europe <- USEU_pct %>%
filter(location == "Europe") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
ccf.out <-
ccf(usa$pct,
europe$pct,
lag.max = 14,
plot = FALSE)
# find the h for the maximum cross-correlation
h_max <- which(ccf.out$acf == max(ccf.out$acf))
max_ccf_lag <- ccf.out$lag[h_max]
max_ccf_value <- ccf.out$acf[h_max]
# plot the ccf
plot(ccf.out, ylab = "cross-correlation", main = "CCF: USA(t) vs. Europe(t-h)")
rm(list = ls())
graphics.off()
# Required libraries
library(tidyverse)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
Warning = FALSE)
owid_covid_data <- read_csv("owid-covid-data.csv")
USEU <- owid_covid_data %>%
filter(
location %in% c("Europe", "European Union", "United States") &
date >= "2020-02-01" & date <= "2020-03-31"
) %>%
select(location, date, total_cases, new_cases_smoothed)
USEU %>%
ggplot(mapping = aes(
x = date,
y = total_cases,
group = location,
color = location
)) + geom_line()
USEU_pct <- USEU %>%
group_by(location) %>%
mutate(pct = 100*(log(total_cases/lag(total_cases))))
USEU_pct %>%
ggplot(mapping = aes(
x = date,
y = pct,
group = location,
color = location
)) + geom_line()
usa <- USEU_pct %>%
filter(location == "United States") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
europe <- USEU_pct %>%
filter(location == "Europe") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
ccf.out <-
ccf(usa$pct,
europe$pct,
lag.max = 14,
plot = FALSE)
# find the h for the maximum cross-correlation
h_max <- which(ccf.out$acf == max(ccf.out$acf))
max_ccf_lag <- ccf.out$lag[h_max]
max_ccf_value <- ccf.out$acf[h_max]
# plot the ccf
plot(ccf.out, ylab = "cross-correlation", main = "CCF: USA(t) vs. Europe(t-h)")
install.packages(c("backports", "broom", "cli", "conquer", "cpp11", "crayon", "crosstalk", "future", "generics", "glmnet", "gsl", "pillar", "rlang", "rvest", "systemfonts", "tinytex", "tsibble", "tzdb", "uuid", "xfun"))
install.packages(c("backports", "broom", "cli", "conquer", "cpp11", "crayon", "crosstalk", "future", "generics", "glmnet", "gsl", "pillar", "rlang", "rvest", "systemfonts", "tinytex", "tsibble", "tzdb", "uuid", "xfun"))
rm(list = ls())
graphics.off()
# Required libraries
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
rm(list = ls())
graphics.off()
# Required libraries
library(tidyverse)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
Warning = FALSE)
owid_covid_data <- read_csv("owid-covid-data.csv")
USEU <- owid_covid_data %>%
filter(
location %in% c("Europe", "European Union", "United States") &
date >= "2020-02-01" & date <= "2020-03-31"
) %>%
select(location, date, total_cases, new_cases_smoothed)
USEU %>%
ggplot(mapping = aes(
x = date,
y = total_cases,
group = location,
color = location
)) + geom_line()
USEU_pct <- USEU %>%
group_by(location) %>%
mutate(pct = 100*(log(total_cases/lag(total_cases))))
USEU_pct %>%
ggplot(mapping = aes(
x = date,
y = pct,
group = location,
color = location
)) + geom_line()
usa <- USEU_pct %>%
filter(location == "United States") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
europe <- USEU_pct %>%
filter(location == "Europe") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
ccf.out <-
ccf(usa$pct,
europe$pct,
lag.max = 14,
plot = FALSE)
# find the h for the maximum cross-correlation
h_max <- which(ccf.out$acf == max(ccf.out$acf))
max_ccf_lag <- ccf.out$lag[h_max]
max_ccf_value <- ccf.out$acf[h_max]
# plot the ccf
plot(ccf.out, ylab = "cross-correlation", main = "CCF: USA(t) vs. Europe(t-h)")
rm(list = ls())
graphics.off()
# Required libraries
library(tidyverse)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
Warning = FALSE)
owid_covid_data <- read_csv("owid-covid-data.csv")
USEU <- owid_covid_data %>%
filter(
location %in% c("Europe", "European Union", "United States") &
date >= "2020-02-01" & date <= "2020-03-31"
) %>%
select(location, date, total_cases, new_cases_smoothed)
USEU %>%
ggplot(mapping = aes(
x = date,
y = total_cases,
group = location,
color = location
)) + geom_line()
USEU_pct <- USEU %>%
group_by(location) %>%
mutate(pct = 100*(log(total_cases/lag(total_cases))))
USEU_pct %>%
ggplot(mapping = aes(
x = date,
y = pct,
group = location,
color = location
)) + geom_line()
usa <- USEU_pct %>%
filter(location == "United States") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
europe <- USEU_pct %>%
filter(location == "Europe") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
ccf.out <-
ccf(usa$pct,
europe$pct,
lag.max = 14,
plot = FALSE)
# find the h for the maximum cross-correlation
h_max <- which(ccf.out$acf == max(ccf.out$acf))
max_ccf_lag <- ccf.out$lag[h_max]
max_ccf_value <- ccf.out$acf[h_max]
# plot the ccf
plot(ccf.out, ylab = "cross-correlation", main = "CCF: USA(t) vs. Europe(t-h)")
rm(list = ls())
graphics.off()
# Required libraries
library(tidyverse)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
Warning = FALSE)
owid_covid_data <- read_csv("owid-covid-data.csv")
USEU <- owid_covid_data %>%
filter(
location %in% c("Europe", "European Union", "United States") &
date >= "2020-02-01" & date <= "2020-03-31"
) %>%
select(location, date, total_cases, new_cases_smoothed)
USEU %>%
ggplot(mapping = aes(
x = date,
y = total_cases,
group = location,
color = location
)) + geom_line()
USEU_pct <- USEU %>%
group_by(location) %>%
mutate(pct = 100*(log(total_cases/lag(total_cases))))
USEU_pct %>%
ggplot(mapping = aes(
x = date,
y = pct,
group = location,
color = location
)) + geom_line()
usa <- USEU_pct %>%
filter(location == "United States") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
europe <- USEU_pct %>%
filter(location == "Europe") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
ccf.out <-
ccf(usa$pct,
europe$pct,
lag.max = 14,
plot = FALSE)
# find the h for the maximum cross-correlation
h_max <- which(ccf.out$acf == max(ccf.out$acf))
max_ccf_lag <- ccf.out$lag[h_max]
max_ccf_value <- ccf.out$acf[h_max]
# plot the ccf
plot(ccf.out, ylab = "cross-correlation", main = "CCF: USA(t) vs. Europe(t-h)")
rm(list = ls())
graphics.off()
# Required libraries
library(tidyverse)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
Warning = FALSE)
owid_covid_data <- read_csv("owid-covid-data.csv")
USEU <- owid_covid_data %>%
filter(
location %in% c("Europe", "European Union", "United States") &
date >= "2020-02-01" & date <= "2020-03-31"
) %>%
select(location, date, total_cases, new_cases_smoothed)
USEU %>%
ggplot(mapping = aes(
x = date,
y = total_cases,
group = location,
color = location
)) + geom_line()
USEU_pct <- USEU %>%
group_by(location) %>%
mutate(pct = 100*(log(total_cases/lag(total_cases))))
USEU_pct %>%
ggplot(mapping = aes(
x = date,
y = pct,
group = location,
color = location
)) + geom_line()
usa <- USEU_pct %>%
filter(location == "United States") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
europe <- USEU_pct %>%
filter(location == "Europe") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
ccf.out <-
ccf(usa$pct,
europe$pct,
lag.max = 14,
plot = FALSE)
# find the h for the maximum cross-correlation
h_max <- which(ccf.out$acf == max(ccf.out$acf))
max_ccf_lag <- ccf.out$lag[h_max]
max_ccf_value <- ccf.out$acf[h_max]
# plot the ccf
plot(ccf.out, ylab = "cross-correlation", main = "CCF: USA(t) vs. Europe(t-h)")
rm(list = ls())
graphics.off()
# Required libraries
library(tidyverse)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
Warning = FALSE)
owid_covid_data <- read_csv("owid-covid-data.csv")
USEU <- owid_covid_data %>%
filter(
location %in% c("Europe", "European Union", "United States") &
date >= "2020-02-01" & date <= "2020-03-31"
) %>%
select(location, date, total_cases, new_cases_smoothed)
USEU %>%
ggplot(mapping = aes(
x = date,
y = total_cases,
group = location,
color = location
)) + geom_line()
USEU_pct <- USEU %>%
group_by(location) %>%
mutate(pct = 100*(log(total_cases/lag(total_cases))))
USEU_pct %>%
ggplot(mapping = aes(
x = date,
y = pct,
group = location,
color = location
)) + geom_line()
usa <- USEU_pct %>%
filter(location == "United States") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
europe <- USEU_pct %>%
filter(location == "Europe") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
ccf.out <-
ccf(usa$pct,
europe$pct,
lag.max = 14,
plot = FALSE)
# find the h for the maximum cross-correlation
h_max <- which(ccf.out$acf == max(ccf.out$acf))
max_ccf_lag <- ccf.out$lag[h_max]
max_ccf_value <- ccf.out$acf[h_max]
# plot the ccf
plot(ccf.out, ylab = "cross-correlation", main = "CCF: USA(t) vs. Europe(t-h)")
rm(list = ls())
graphics.off()
# Required libraries
library(tidyverse)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
Warning = FALSE)
owid_covid_data <- read_csv("owid-covid-data.csv")
USEU <- owid_covid_data %>%
filter(
location %in% c("Europe", "European Union", "United States") &
date >= "2020-02-01" & date <= "2020-03-31"
) %>%
select(location, date, total_cases, new_cases_smoothed)
USEU %>%
ggplot(mapping = aes(
x = date,
y = total_cases,
group = location,
color = location
)) + geom_line()
USEU_pct <- USEU %>%
group_by(location) %>%
mutate(pct = 100*(log(total_cases/lag(total_cases))))
USEU_pct %>%
ggplot(mapping = aes(
x = date,
y = pct,
group = location,
color = location
)) + geom_line()
usa <- USEU_pct %>%
filter(location == "United States") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
europe <- USEU_pct %>%
filter(location == "Europe") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
ccf.out <-
ccf(usa$pct,
europe$pct,
lag.max = 14,
plot = FALSE)
# find the h for the maximum cross-correlation
h_max <- which(ccf.out$acf == max(ccf.out$acf))
max_ccf_lag <- ccf.out$lag[h_max]
max_ccf_value <- ccf.out$acf[h_max]
# plot the ccf
plot(ccf.out, ylab = "cross-correlation", main = "CCF: USA(t) vs. Europe(t-h)")
rm(list = ls())
graphics.off()
# Required libraries
library(tidyverse)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
Warning = FALSE)
owid_covid_data <- read_csv("owid-covid-data.csv")
USEU <- owid_covid_data %>%
filter(
location %in% c("Europe", "European Union", "United States") &
date >= "2020-02-01" & date <= "2020-03-31"
) %>%
select(location, date, total_cases, new_cases_smoothed)
USEU %>%
ggplot(mapping = aes(
x = date,
y = total_cases,
group = location,
color = location
)) + geom_line()
USEU_pct <- USEU %>%
group_by(location) %>%
mutate(pct = 100*(log(total_cases/lag(total_cases))))
USEU_pct %>%
ggplot(mapping = aes(
x = date,
y = pct,
group = location,
color = location
)) + geom_line()
usa <- USEU_pct %>%
filter(location == "United States") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
europe <- USEU_pct %>%
filter(location == "Europe") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
ccf.out <-
ccf(usa$pct,
europe$pct,
lag.max = 14,
plot = FALSE)
# find the h for the maximum cross-correlation
h_max <- which(ccf.out$acf == max(ccf.out$acf))
max_ccf_lag <- ccf.out$lag[h_max]
max_ccf_value <- ccf.out$acf[h_max]
# plot the ccf
plot(ccf.out, ylab = "cross-correlation", main = "CCF: USA(t) vs. Europe(t-h)")
rm(list = ls())
graphics.off()
# Required libraries
library(tidyverse)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
Warning = FALSE)
owid_covid_data <- read_csv("owid-covid-data.csv")
USEU <- owid_covid_data %>%
filter(
location %in% c("Europe", "European Union", "United States") &
date >= "2020-02-01" & date <= "2020-03-31"
) %>%
select(location, date, total_cases, new_cases_smoothed)
USEU %>%
ggplot(mapping = aes(
x = date,
y = total_cases,
group = location,
color = location
)) + geom_line()
USEU_pct <- USEU %>%
group_by(location) %>%
mutate(pct = 100*(log(total_cases/lag(total_cases))))
USEU_pct %>%
ggplot(mapping = aes(
x = date,
y = pct,
group = location,
color = location
)) + geom_line()
usa <- USEU_pct %>%
filter(location == "United States") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
europe <- USEU_pct %>%
filter(location == "Europe") %>%
ungroup %>%
select(date, pct) %>%
drop_na()
ccf.out <-
ccf(usa$pct,
europe$pct,
lag.max = 14,
plot = FALSE)
# find the h for the maximum cross-correlation
h_max <- which(ccf.out$acf == max(ccf.out$acf))
max_ccf_lag <- ccf.out$lag[h_max]
max_ccf_value <- ccf.out$acf[h_max]
# plot the ccf
plot(ccf.out, ylab = "cross-correlation", main = "CCF: USA(t) vs. Europe(t-h)")
